<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- Controller Activate! -->
    <mvc:annotation-driven />

    <!-- Bean scanner -->
    <context:component-scan base-package="coding.toast.springweblegacy"/>

    <!-- Thymeleaf Template Engine Activate -->
    <!-- reference : https://www.thymeleaf.org/doc/tutorials/3.1/thymeleafspring.html -->

    <!-- SpringResourceTemplateResolver automatically integrates with Spring's own -->
    <!-- resource resolution infrastructure, which is highly recommended.          -->
    <bean id="templateResolver"
          class="org.thymeleaf.spring6.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/templates/" />
        <property name="suffix" value=".html" />
    </bean>

    <!-- SpringTemplateEngine automatically applies SpringStandardDialect and      -->
    <!-- enables Spring's own MessageSource message resolution mechanisms.         -->
    <bean id="templateEngine"
          class="org.thymeleaf.spring6.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>

    <bean class="org.thymeleaf.spring6.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="contentType" value="text/html"/>
        <property name="characterEncoding" value="UTF-8" />
    </bean>


    <!-- multipart resolver, you must config Multipart Configuration First On web.xml
         Or AbstractAnnotationConfigDispatcherServletInitializer Extended Class -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
        <property name="resolveLazily" value="true"/>
        <property name="strictServletCompliance" value="true"/>
    </bean>

    <!-- Resource Resolve ByPassing Default Servlet -->
    <!-- for favicon -->
    <mvc:resources mapping="/favicon.ico" location="/favicon.ico" />
    <!-- for other resources -->
    <mvc:resources mapping="/resources/**" location="/resources/" />
</beans>
